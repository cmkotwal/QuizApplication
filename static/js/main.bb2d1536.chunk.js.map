{"version":3,"sources":["AddAuthorForm.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","state","name","imageUrl","books","bookTemp","onFieldChange","bind","handleSubmit","handleAddBook","event","this","setState","target","value","preventDefault","onAddAuthor","concat","className","onSubmit","htmlFor","type","onChange","map","book","key","onClick","React","Component","AddAuthorForm","match","Hero","author","Turn","highlight","onAnswerSelected","style","backgroundColor","none","correct","wrong","HighlightToBgColor","src","alt","title","Book","Continue","show","onContinue","Footer","id","href","App","turnData","to","Boolean","window","location","hostname","authors","imageSource","getTurnData","allBooks","reduce","p","c","i","fourRandomBooks","shuffle","slice","answer","sample","find","some","resetState","isCorrect","render","App1","WrapperAuthor","withRouter","history","push","ReactDOM","Fragment","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bb2d1536.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./AddAuthorForm.css\";\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      imageUrl: \"\",\r\n      books: [],\r\n      bookTemp: \"\",\r\n    };\r\n\r\n    this.onFieldChange = this.onFieldChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleAddBook = this.handleAddBook.bind(this);\r\n  }\r\n\r\n  onFieldChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.onAddAuthor(this.state);\r\n  }\r\n\r\n  handleAddBook(event) {\r\n    this.setState({\r\n      books: this.state.books.concat([this.state.bookTemp]),\r\n      bookTemp: \"\",\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"AddAuthorForm\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"AddAuthorForm_Input\">\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.onFieldChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"AddAuthorForm_Input\">\r\n            <label htmlFor=\"imageUrl\">Image URL:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"imageUrl\"\r\n              value={this.state.imageUrl}\r\n              onChange={this.onFieldChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"AddAuthorForm_Input\">\r\n            <label htmlFor=\"bookTemp\">AddBook:</label>\r\n            {this.state.books.map((book) => (\r\n              <p key={book}>{book}</p>\r\n            ))}\r\n            <input\r\n              type=\"text\"\r\n              name=\"bookTemp\"\r\n              value={this.state.bookTemp}\r\n              onChange={this.onFieldChange}\r\n            />\r\n            <input type=\"button\" value=\"+\" onClick={this.handleAddBook} />\r\n          </div>\r\n\r\n          <div>\r\n            <button type=\"submit\">SubmitData</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction AddAuthorForm({ match, onAddAuthor }) {\r\n  return (\r\n    <div className=\"AddAuthorForm\">\r\n      <h1>Add Author</h1>\r\n      <Form onAddAuthor={onAddAuthor} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddAuthorForm;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"./bootstrap.min.css\";\n\nfunction Hero({ author }) {\n  return (\n    <div className=\"row\">\n      <div className=\"jumbotron col-10 offset-1\">\n        <h1>Author Quiz</h1>\n        <p>Select the book written by {author.name}</p>\n      </div>\n    </div>\n  );\n}\n\nfunction Turn({ author, books, highlight, onAnswerSelected }) {\n  function HighlightToBgColor(highlight) {\n    const mapping = {\n      none: \"\",\n      correct: \"green\",\n      wrong: \"red\",\n    };\n    return mapping[highlight];\n  }\n  return (\n    <div\n      className=\"row turn\"\n      style={{ backgroundColor: HighlightToBgColor(highlight) }}\n    >\n      <div className=\"col-4 offset-1\">\n        <img src={author.imageUrl} alt=\"Author\" className=\"authorImage\" />\n      </div>\n\n      <div className=\"col-6\">\n        {books.map((title) => (\n          <Book title={title} key={title} onClick={onAnswerSelected} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction Continue({ show, onContinue }) {\n  return (\n    <div className=\"row continue\">\n      {show ? (\n        <div className=\"col-11\">\n          <button\n            className=\"btn btn-primary btn-lg float-right\"\n            onClick={onContinue}\n          >\n            Continue\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction Footer() {\n  return (\n    <div className=\"row\" id=\"footer\">\n      <div className=\"col-12\">\n        <p>\n          These all images are belongs to{\" \"}\n          <a href=\"https://www.gkduniya.com/authors-books\">That link</a> go here\n          to check details\n        </p>\n      </div>\n    </div>\n  );\n}\n\nfunction Book({ title, onClick }) {\n  return (\n    <div\n      className=\"answer\"\n      onClick={() => {\n        onClick(title);\n      }}\n    >\n      <h4>{title}</h4>\n    </div>\n  );\n}\nfunction App({ turnData, highlight, onAnswerSelected, onContinue }) {\n  return (\n    <div className=\"container-fluid\">\n      <Hero {...turnData} />\n      <Turn\n        {...turnData}\n        highlight={highlight}\n        onAnswerSelected={onAnswerSelected}\n      />\n      <Continue show={highlight === \"correct\"} onContinue={onContinue} />\n      <p>\n        <Link to=\"/add\">Add an author</Link>\n      </p>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport AddAuthorForm from \"./AddAuthorForm\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { shuffle, sample } from \"underscore\";\nconst authors = [\n  {\n    name: \"S S Kohli\",\n    imageUrl: \"images/authors/kohli.jpg\",\n    imageSource: \"Wikimedia Commans\",\n    books: [\"A Conceptual Encyclopedia of Guru Granth Sahib\"],\n  },\n\n  {\n    name: \"Vikram Sheth\",\n    imageUrl: \"images/authors/vikram-sheth.jpg\",\n    imageSource: \"Wikimedia Commans\",\n    books: [\"Arion and the Dolphin\"],\n  },\n\n  {\n    name: \"Laxmi-Sehgal\",\n    imageUrl: \"images/authors/lakshmi-sehgal.jpg\",\n    imageSource: \"Wikimedia Commans\",\n    books: [\"A Reveolutionary life\"],\n  },\n\n  {\n    name: \"Jawaharlal Nehru\",\n    imageUrl: \"images/authors/jawaharlal-nehru.jpg\",\n    imageSource: \"Wikimedia Commans\",\n    books: [\"An Autobiography\"],\n  },\n\n  {\n    name: \"Arun Shourie\",\n    imageUrl: \"images/authors/arun-shourie.jpg\",\n    imageSource: \"Wikimedia Commans\",\n    books: [\"A Secular Agenda\"],\n  },\n\n  {\n    name: \"Abul Fazal\",\n    imageUrl: \"images/authors/abul-fazal.jpg\",\n    imageSource: \"Wikimedia Commans\",\n    books: [\"Akbarnama\"],\n  },\n];\n\nfunction getTurnData(authors) {\n  const allBooks = authors.reduce(function (p, c, i) {\n    return p.concat(c.books);\n  }, []);\n\n  const fourRandomBooks = shuffle(allBooks).slice(0, 4);\n  const answer = sample(fourRandomBooks);\n\n  return {\n    books: fourRandomBooks,\n    author: authors.find((author) =>\n      author.books.some((title) => title === answer)\n    ),\n  };\n}\n\nfunction resetState() {\n  return {\n    turnData: getTurnData(authors),\n    highlight: \"\",\n  };\n}\n\nlet state = resetState();\n\nfunction onAnswerSelected(answer) {\n  const isCorrect = state.turnData.author.books.some((book) => book === answer);\n  state.highlight = isCorrect ? \"correct\" : \"wrong\";\n  render();\n}\n\nfunction App1() {\n  return (\n    <App\n      {...state}\n      onAnswerSelected={onAnswerSelected}\n      onContinue={() => {\n        state = resetState();\n        render();\n      }}\n    />\n  );\n}\n\nconst WrapperAuthor = withRouter(({ history }) => (\n  <AddAuthorForm\n    onAddAuthor={(author) => {\n      authors.push(author);\n      history.push(\"/\");\n    }}\n  />\n));\nfunction render() {\n  ReactDOM.render(\n    <BrowserRouter>\n      <React.Fragment>\n        <Route exact path=\"/\" component={App1} />\n        <Route path=\"/add\" component={WrapperAuthor} />\n      </React.Fragment>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n}\nrender();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}